{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","statusText","onDoubleClick","isOwner","editMode__input","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","styles","profileDataForm","onSubmit","createField","Input","type","Textarea","contacts","Object","keys","map","key","onClick","formSummaryError","ProfileData","toEditMode","about","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsHeader","contactTitle","contactValue","about__button","Contact","contactTitileWrapper","href","target","ProfileInfo","profileStatus","savePhoto","saveProfile","undefined","Preloader","profileInfo","wrapper__avatar","avatar","src","photos","large","userPhoto","alt","fileUpload","files","length","wrapper__status_about","initialValues","formData","then","Post","postWrapper","item","postMessage","message","likesCount","MyPosts","PostsElements","posts","post","id","postsBlock","AddPostReduxForm","values","addPost","newPostTextBody","postsElements","maxLength300","maxLengthCreator","addPostForm","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.ddb013d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"wrapper__avatar\":\"ProfileInfo_wrapper__avatar__3lqwj\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"fileUpload\":\"ProfileInfo_fileUpload__2Ummu\",\"wrapper__status_about\":\"ProfileInfo_wrapper__status_about__3yOp_\",\"status\":\"ProfileInfo_status__2G3BZ\",\"statusText\":\"ProfileInfo_statusText__1KWIZ\",\"editMode__input\":\"ProfileInfo_editMode__input__1GK_B\",\"about\":\"ProfileInfo_about__ogyhT\",\"about__button\":\"ProfileInfo_about__button__1WHFa\",\"contactsHeader\":\"ProfileInfo_contactsHeader__1-lqE\",\"contactTitileWrapper\":\"ProfileInfo_contactTitileWrapper__9qavk\",\"contactTitle\":\"ProfileInfo_contactTitle__2tda8\",\"contacts\":\"ProfileInfo_contacts__3y62P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"addPostForm\":\"MyPosts_addPostForm__188so\",\"postsElements\":\"MyPosts_postsElements__33sHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapper\":\"Post_postWrapper__1fzcG\",\"item\":\"Post_item__ihtu9\",\"postMessage\":\"Post_postMessage__2yT1f\",\"likesCount\":\"Post_likesCount__R9C9-\"};","import React, { useEffect, useState} from 'react';\nimport s from './ProfileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.setStatus)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n            <div className={s.statusText}>\n                <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\n            </div>\n            }\n            {props.isOwner && editMode &&\n            <div className={s.editMode__input}>\n                enter your status below and click nearby to save\n                    <input onChange={onStatusChange} value={status} autoFocus={true} onBlur={deactivateEditMode}/>\n            </div>\n            }\n        </div>\n    )\n}\n;\n\nexport default ProfileStatusWithHooks;","import React, {createRef} from 'react';\n\nclass ProfileStatus extends React.Component {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n\n    deactivateEditMode = () =>  {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode &&\n                <div>\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || 'No status' }</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}></input>\n                </div>\n                }\n            </div>\n        )\n    }\n};\n\nexport default ProfileStatus;","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\nimport styles from \"../../common/FormsControls/FormsControls.module.css\";\n\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return (\n        <div className={styles.profileDataForm}>\n            <form onSubmit={handleSubmit}>\n\n                <div>\n                    <b>Name</b>: {createField('Full name', 'fullName', [], Input)}\n                </div>\n                <div>\n                    <b>Looking for a job</b>:\n                    {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\n                </div>\n\n                <div><b>My professional skills</b>:\n                    {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\n                </div>\n\n                <div>\n                    <b>About me</b>:\n                    {createField('About me', 'aboutMe', [], Textarea)}\n                </div>\n                <div className={s.contacts}>\n                    <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\n                    return (\n                        <div key={key}>\n                            <b>{key} :</b> {createField(key, 'contacts.' + key, [], Input)}\n                        </div>\n                    )\n                })}\n                </div>\n                <div>\n                    <button onClick={() => {\n                    }}>Save\n                    </button>\n                    {error &&\n                    <div className={styles.formSummaryError}>\n                        {error}\n                    </div>\n                    }\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\n\nexport default ProfileDataReduxForm","import React, {useState} from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from './ProfileStatus'\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/default-user.jpg\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({profile, profileStatus, updateStatus, isOwner, savePhoto, saveProfile, ...props}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n\n    if (profile === null || profile === undefined) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(() => {\n            setEditMode(false);\n        })\n\n\n    }\n\n    return (\n        <div className={s.profileInfo}>\n            <div className={s.wrapper__avatar}>\n                <div className={s.avatar}>\n                    <img src={profile.photos.large || userPhoto} alt='avatar'/>\n                    {isOwner && <label className={s.fileUpload}>\n                        <input type={'file'} onChange={onMainPhotoSelected}/> <b>🔍</b>\n                    </label>}\n                </div>\n            </div>\n\n            <div className={s.wrapper__status_about}>\n                <div className={s.status}><b>Status {isOwner && '(Double-click to change)'}</b>:\n                    <ProfileStatusWithHooks status={profileStatus} updateStatus={updateStatus} isOwner={isOwner}/>\n                </div>\n                {editMode\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                    : <ProfileData profile={profile}\n                                   isOwner={isOwner}\n                                   toEditMode={() => {\n                                       setEditMode(true)\n                                   }}/>}\n            </div>\n        </div>\n    )\n};\n\nconst ProfileData = ({profile, isOwner, toEditMode}) => {\n    return (\n        <div className={s.about}>\n            <div><b>Name:</b> {profile.fullName}</div>\n            <div>\n                <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\n            </div>\n            {profile.lookingForAJob &&\n            <div><b>My professional skills:</b> {profile.lookingForAJobDescription}</div>}\n\n            <div>\n                <b>About me:</b> {profile.aboutMe}\n            </div>\n            <div className={s.contacts}>\n                <span className={s.contactsHeader}>Contacts:</span> {Object.keys(profile.contacts).map(key => {\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n            })}\n                {isOwner && <div className={s.about__button}>\n                    <button onClick={toEditMode}>Edit</button> </div>}\n            </div>\n        </div>\n    )\n}\n\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return (\n        <div className={s.contactTitileWrapper}>\n            <span className={s.contactTitle}>{contactTitle}:</span> <a href={contactValue}  target=\"_blank\">{contactValue}</a>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className={s.postWrapper}>\n            <div className={s.item}>\n                <img\n                    src='https://static.vecteezy.com/system/resources/thumbnails/000/425/647/small/Multimedia__28203_29.jpg'\n                    alt='avatar'/>\n                <span className={s.postMessage}>\n          {props.message}\n          </span>\n\n            </div>\n            <div    className={s.likesCount}>\n                <span>Like</span> {props.likesCount}\n            </div>\n        </div>\n    );\n};\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst MyPosts = props => {\n    let PostsElements =\n        props.posts.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>);\n\n    let onAddNewPost = (values) => {\n        props.addPost(values.newPostTextBody)\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <b>My posts</b>\n            {props.isOwner &&\n            <AddPostReduxForm onSubmit={onAddNewPost}/>}\n            <div className={s.postsElements}>\n            {PostsElements}\n            </div>\n        </div>\n    );\n}\n\nexport default MyPosts;\n\nconst maxLength300 = maxLengthCreator(300)\n\nconst AddPostForm = (props) => {\n    return (\n        <div className={s.addPostForm}>\n            <form onSubmit={props.handleSubmit}>\n                <div>\n                    <Field component={Textarea} name='newPostTextBody' placeholder='Enter your text'\n                           validate={[required, maxLength300]}/>\n                </div>\n                <div>\n                    <button>Add a post</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst AddPostReduxForm = reduxForm({form: 'addPost'})(AddPostForm)","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostTextBody) => { dispatch(addPostActionCreator(newPostTextBody)) }\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n  return (\n    <div className={s.content}>\n      <ProfileInfo profile={props.profile}\n                   profileStatus={props.status}\n                   saveProfile={props.saveProfile}\n                   updateStatus={props.updateStatus}\n                   savePhoto={props.savePhoto}\n                   isOwner={props.isOwner} />\n      <MyPostsContainer isOwner={props.isOwner} />\n    </div>\n  );\n};\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, setStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {Redirect, withRouter} from \"react-router-dom\"\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}\n            />\n\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.id,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter,\n    /*withAuthRedirect*/\n)(ProfileContainer)\n\n\n"],"sourceRoot":""}